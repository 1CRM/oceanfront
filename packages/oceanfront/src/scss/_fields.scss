@mixin field-text-disabled {
  color: $color-field-disabled;
  -webkit-text-fill-color: $color-field-disabled; // override needed for disabled state
  text-shadow: $text-shadow-disabled;
}

@mixin field-text-base {
  font-family: $font-family-input;
  font-weight: $font-weight-input;
  letter-spacing: $letter-spacing-input;
  line-height: $line-height-input;
}

.of--density-0 {
  --pad-h-input: #{$pad-h-compact-input};
  --pad-v-input: #{$pad-v-compact-input};
}
.of--small {
  --font-size-input: #{$font-size-input-sm};
}
.of--large {
  --font-size-input: #{$font-size-input-lg};
}

.of--text-numeric {
  font-variant-numeric: lining-nums tabular-nums;
}
.of--text-placeholder {
  color: $color-field-placeholder;
}

.of--align-left {
  text-align: left;
}
.of--align-right {
  text-align: right;
}
.of--align-center {
  text-align: center;
}
.of--align-start {
  text-align: start;
}
.of--align-end {
  text-align: end;
}

.of--cursor-default {
  cursor: default;
}
.of--cursor-pointer {
  cursor: pointer;
}
.of--cursor-text {
  cursor: text;
}

.of-field {
  // .input-icon {
  //   color: $color-field-icon;
  // }

  // .wait-icon,
  // .wait-icon.dynamic {
  //   height: 18px;
  //   line-height: 18px;
  //   vertical-align: top;
  // }

  box-sizing: border-box;
  color: $color-field;
  display: inline-flex;
  flex-flow: column nowrap;
  font-size: $font-size-input;
  max-width: 100%;
  outline: none;
  text-align: start;
  @include no-select;

  .of-field-label {
    color: $color-field-label;
  }
  &:hover .of-field-label {
    color: $color-field-hover;
  }
  .static .of-field-label {
    color: $color-field-label;
  }
  &.of--focused {
    .of-field-label {
      color: $color-field-focus-label;
    }
  }
}

.of-field-body {
  box-sizing: border-box;
  display: flex;
  flex-flow: column nowrap;
  outline: none;
  position: relative;
}

.of-field-label {
  // cursor: inherit;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: break-word;
}

.of-field-inner {
  align-items: flex-start;
  box-sizing: border-box;
  color: $color-field;
  display: flex;
  font-size: $font-size-input;
  position: relative;
  max-width: 100%; // don't extend past containing cell
  // vertical-align: $vertical-align-input;

  @include field-text-base;
}

.of-field-content {
  display: flex;
  width: 0; // allow element to resize smaller in firefox when nowrap is used
}
.of-field-content,
.of-field-input-label {
  cursor: inherit;
  flex: auto;
  overflow: hidden;
  text-overflow: ellipsis;
}

.of-field-input {
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  font-weight: normal;
  line-height: inherit;
  margin: 0;
  // caret-color

  // may want to restrict to certain variants:
  -webkit-appearance: none;
  appearance: none;
  background: none;
  border: none;
  border-radius: 0;
  // height: 100%;
  width: 100%;
  &::placeholder {
    color: $color-field-placeholder;
    opacity: 1;
  }
}

.of-field-input,
.of-field-input-label {
  box-sizing: border-box;
  // min-height: calc(1em * #{$line-height-input} + 2 * #{$pad-v-input});
  outline: none;
  padding: $pad-v-input $pad-h-input;
  // letter-spacing
}

.of-field-prepend,
.of-field-append {
  align-self: center;
  box-sizing: border-box;
  display: flex;
  flex: none;
}
.of-field-prepend {
  padding-left: $pad-h-input;
}
.of-field-append {
  padding-right: $pad-h-input;
}

.of-toggle-field,
.of-file-field {
  .of-field-input {
    // input is invisible and covers the entire container
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    -webkit-appearance: none;
    appearance: none;
    cursor: inherit;
    font-size: inherit;
    margin: 0;
    opacity: 0;
    outline: none;
    &::-webkit-file-upload-button {
      cursor: inherit;
    }
  }
}

.of-file-input {
  display: flex;
  position: relative;
}

.of-toggle-field {
  .of-toggle-input {
    align-self: center;
    flex: none;
    padding: 0 $pad-h-input;
    justify-content: center;
    position: relative;
    // --of-icon-scale-indiv: 1.15;
  }

  .of-toggle-outer {
    display: flex;
    flex: auto;
  }
}

.of-switch {
  align-items: center;
  box-sizing: border-box;
  display: inline-flex;
  font-size: $font-size-input;
  height: calc(1em * #{$line-height-input});
  line-height: $line-height-input;
  margin: $pad-v-input $pad-h-input;
  padding: 0.15em 0.1em;
  position: relative;
  width: calc(2em + 2px);

  .of-switch-thumb {
    background-color: #555;
    // border: 1px solid #bbb;
    border-radius: 1em;
    box-sizing: border-box;
    box-shadow: 0 2px 1px 0 rgba(100, 100, 100, 0.15);
    content: ' ';
    height: calc(1em * #{$line-height-input});
    left: 0;
    position: absolute;
    top: 0;
    transition: left 0.15s ease-in-out;
    width: calc(1em * #{$line-height-input});
  }

  .of-switch-track {
    border: 1px solid #777;
    border-radius: 1em;
    box-sizing: border-box;
    flex: auto;
    height: 100%;
    transition: background 0.15s ease-in-out;
  }
  .of--checked & {
    .of-switch-thumb {
      left: calc(1em - 1px);
    }
    .of-switch-track {
      background: #888;
    }
  }
}

.of--variant-basic {
  margin: 0 0.3em;
  .of-field-body {
    width: calc(var(--of-field-size) - 0.6em);
  }

  .of-field-over,
  .of-field-footer {
    min-height: 0.25em;
  }

  .of-field-label {
    display: block;
    font-size: 80%;
    padding: 0 $pad-h-input;
  }

  .of-field-inner {
    background: $bg-field;
    border: $border-width-input solid $border-color-field;
    border-radius: $border-radius-input;
    box-shadow: $box-shadow-field-basic;
  }
  &:hover .of-field-inner {
    border-color: $border-color-field-hover;
    // color: $color-field-hover;
  }
  &.of--focused .of-field-inner {
    background: $bg-field-focus;
    border-color: $border-color-field-focus;
    box-shadow: $box-shadow-field-basic-focus;
  }
  .static .of-field-inner {
    border-color: $border-color-field;
  }
  &.of--readonly,
  &.of--disabled {
    .of-field-inner {
      background: $bg-field-disabled;
      border-color: $border-color-field-disabled;
    }
  }
  &.of--disabled .of-field-inner {
    opacity: $opacity-input-disabled;
    @include field-text-disabled;
  }
  &.of--invalid:not(.of--focused) .of-field-inner {
    border-color: $border-color-field-invalid;
  }

  &.of-text-field textarea {
    padding: $pad-v-input $pad-h-input 0;
    resize: vertical;
  }
}

.of--variant-outlined .of-field-body,
.of--variant-filled .of-field-body {
  width: var(--of-field-size);

  .of-field-inner {
    min-height: calc(3em + 2 * #{$pad-v-field});
    // padding-top: calc(0.75em - 1px);
  }

  .of-field-over {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    pointer-events: none;
  }

  // .of-field-footer {
  // min-height: 0.25em;
  // }

  .of-field-input-label {
    // min-height: calc(1em * #{$line-height-input} + 2 * #{$pad-v-input});
    pointer-events: none;
  }
  .of-field-input,
  .of-field-input-label {
    padding: $pad-v-input $pad-h-field;
  }

  &.of-text-field textarea {
    margin: 0 1px 1px;
    padding: $pad-v-input calc(#{$pad-h-field} - 1px) $pad-v-input;
    resize: vertical;
    vertical-align: bottom;
  }
}

.of--variant-outlined {
  --cur-border: 1px solid #{$border-color-field};

  .of-field-over {
    display: flex;
    &::before {
      border-radius: $border-radius-field 0 0 $border-radius-field;
      border: var(--cur-border);
      border-right: none;
      box-sizing: border-box;
      content: '';
      flex: 0 0 calc(#{$pad-h-field} - 4px + var(--of-field-size-prepend, 0px));
      transition: border-color 120ms;
    }
    .of-field-label-wrap {
      border-bottom: var(--cur-border);
      border-top: var(--cur-border);
      box-sizing: border-box;
      padding: 0 4px;
      transition: border-color 120ms;
      label {
        position: relative;
        top: 0;
      }
    }
    &::after {
      border-radius: 0 $border-radius-field $border-radius-field 0; // inherit?
      border: var(--cur-border);
      border-left: none;
      content: '';
      flex: auto;
      transition: border-color 120ms;
    }
  }
  &:hover {
    --cur-border: 1px solid #{$border-color-field-hover};
  }
  &.of--focused {
    --cur-border: 2px solid #{$border-color-field-focus};
    .of-field-label-wrap label {
      top: -1px;
    }
  }
  &.of--invalid:not(.of--focused) {
    --cur-border: 1px solid #{$border-color-field-invalid};
  }

  .of-field-label-wrap {
    max-width: calc(
      100% - 2 * #{$pad-h-field} - 1em - var(--of-field-size-prepend, 0px) - var(--of-field-size-append, 0px)
    );
  }
  .of-field-label {
    display: block;
    font-size: 0.75em;
    transform: translateY(1.25em) scale(1.3333);
    transform-origin: left top;
    transition: transform 150ms;
    backface-visibility: hidden; // avoid some jumping?
    // will-change: transform; // FIXME currently blurry in chrome
  }
  &.of--focused,
  &.of--active {
    .of-field-label-wrap {
      border-top-color: transparent;
    }
    .of-field-label {
      transform: translateY(-0.75em);
    }
  }

  .of-field-content {
    margin-top: 0.75em;
    opacity: 0;
    transition: opacity 180ms;
    will-change: opacity;
  }
  &.of--active .of-field-content {
    opacity: 1;
  }
}

.of--variant-filled {
  .of-field-body {
    background: $bg-field-filled;
    border-radius: $border-radius-field $border-radius-field 0 0;
    color: $color-field-filled;
  }

  &:hover .of-field-body {
    background: $bg-field-filled-hover;
  }
  &.of--focused .of-field-body {
    background: $bg-field-filled-focus;
  }

  .of-field-over::after {
    // ripple
    background: $border-color-field-focus;
    content: '';
    height: 2px;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    opacity: 0;
    transform: scaleX(0);
    transform-origin: center;
    transition: opacity 90ms, transform 150ms;
    will-change: opacity, transform;
  }
  &.of--focused .of-field-over::after {
    opacity: 1;
    transform: scaleX(1);
  }

  .of-field-label-wrap {
    margin-left: var(--of-field-size-prepend, 0px);
    max-width: calc(
      100% - 2 * #{$pad-h-field} - 1em - var(--of-field-size-prepend, 0px) - var(--of-field-size-append, 0px)
    );
  }
  .of-field-label {
    color: $color-field-filled-label;
    display: block;
    overflow: hidden;
    position: relative;
    left: $pad-h-field;
    top: $pad-v-input;
    font-size: 0.75em;
    transform: translateY(0.85em) scale(1.3333);
    transform-origin: left top;
    transition: transform 150ms;
    backface-visibility: hidden; // avoid some jumping?
    // will-change: transform; // FIXME currently blurry in chrome
  }
  &:hover .of-field-label {
    color: $color-field-filled-hover;
  }
  .static .of-field-label {
    color: $color-field-filled-label;
  }
  &.of--focused .of-field-label {
    color: $color-field-filled-focus-label;
  }
  &.of--focused,
  &.of--active {
    .of-field-label {
      transform: none;
    }
  }

  .of-field-inner {
    border-bottom: 1px solid $border-color-field;
  }
  .of-field-content {
    opacity: 0;
    transition: opacity 180ms;
    will-change: opacity;
  }
  &.of--with-label .of-field-content {
    margin-top: 1.1em;
  }
  &:hover .of-field-inner {
    border-bottom-color: $border-color-field-hover;
  }
  &.of--active .of-field-content {
    opacity: 1;
  }
  &.of--invalid:not(.of--focused) .of-field-inner {
    border-bottom-color: $border-color-field-invalid;
  }
}

.of-field.of--block {
  display: flex;
  width: auto;
}
