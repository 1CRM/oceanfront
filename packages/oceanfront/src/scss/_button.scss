@mixin apply-button-bg($cat, $state: false) {
  --button-bg-color: #{use-color(#{$cat}-bg, $state)};
  --button-bg-opacity: #{use-opacity(#{$cat}-bg, $state)};
}

@mixin apply-button-color($cat, $state: false) {
  --button-color: #{use-color(#{$cat}-color, $state)};
  --button-opacity: #{use-opacity(#{$cat}-color, $state)};
}

@mixin apply-button-state($cat, $state: false) {
  --state-bg-color: #{use-color(#{$cat}-st, $state)};
  --state-bg-opacity: #{use-opacity(#{$cat}-st, $state)};
}

@mixin apply-button-split($cat) {
  --button-split-color: #{use-color(btn-split, $cat)};
  --button-split-opacity: #{use-opacity(btn-split, $cat)};
}

.of-button {
  @include define-color-opacity(
    btn-elv-bg,
    (var(--of-color-surface), 50%),
    (
      disabled: var(--of-color-on-surface) 12%,
    )
  );
  @include define-color-opacity(
    btn-elv-color,
    (var(--of-primary-tint), 100%),
    (
      disabled: var(--of-color-on-surface) 38%,
    )
  );
  @include define-color-opacity(
    btn-elv-st,
    (var(--of-primary-tint), 0%),
    (
      hover: var(--of-primary-tint) 8%,
      focus: var(--of-primary-tint) 12%,
    )
  );

  @include define-color-opacity(
    btn-fill-bg,
    (var(--of-primary-tint), 100%),
    (
      disabled: var(--of-color-on-surface) 12%,
    )
  );
  @include define-color-opacity(
    btn-fill-color,
    (var(--of-color-on-primary), 100%),
    (
      disabled: var(--of-color-on-surface) 38%,
    )
  );
  @include define-color-opacity(
    btn-fill-st,
    (var(--of-primary-tint), 0%),
    (
      hover: var(--of-color-on-primary) 8%,
      focus: var(--of-color-on-primary) 12%,
    )
  );

  @include define-color-opacity(
    btn-tonal-bg,
    (var(--of-container-tint), 100%),
    (
      disabled: var(--of-color-on-surface) 12%,
    )
  );
  @include define-color-opacity(
    btn-tonal-color,
    (var(--of-on-container-tint), 100%),
    (
      disabled: var(--of-color-on-surface) 38%,
    )
  );
  @include define-color-opacity(
    btn-tonal-st,
    (var(--of-primary-tint), 0%),
    (
      hover: var(--of-on-container-tint) 8%,
      focus: var(--of-on-container-tint) 12%,
    )
  );

  @include define-color-opacity(
    btn-outl-bg,
    (var(--of-primary-tint), 100%),
    (
      disabled: var(--of-color-on-surface) 12%,
    )
  );
  @include define-color-opacity(
    btn-outl-brd,
    (var(--of-color-outline), 100%),
    (
      disabled: var(--of-color-on-surface) 12%,
    )
  );
  @include define-color-opacity(
    btn-outl-color,
    (var(--of-on-container-tint), 100%),
    (
      disabled: var(--of-color-on-surface) 38%,
    )
  );
  @include define-color-opacity(
    btn-outl-st,
    (var(--of-primary-tint), 0%),
    (
      hover: var(--of-on-container-tint) 8%,
      focus: var(--of-on-container-tint) 12%,
    )
  );

  @include define-color-opacity(
    btn-text-color,
    (var(--of-primary-tint), 100%),
    (
      disabled: var(--of-color-on-surface) 38%,
    )
  );
  @include define-color-opacity(
    btn-text-st,
    (var(--of-primary-tint), 0%),
    (
      hover: var(--of-primary-tint) 8%,
      focus: var(--of-primary-tint) 12%,
    )
  );

  @include define-color-opacity(
    btn-split,
    (transparent, 0),
    (
      elv: var(--of-primary-tint) 100%,
      fill: var(--of-color-on-primary) 100%,
      tonal: var(--of-on-container-tint) 100%,
      outl: var(--of-on-container-tint) 100%,
    )
  );

  font-weight: bold;
  position: relative;
  --button-v-pad-base: 0.375em;

  .of--layer {
    --elevation-level: 0;
  }

  .of--layer.of--layer-state {
    pointer-events: none;
    opacity: var(--state-bg-opacity);
    background-color: var(--state-bg-color);
  }

  &.of--density-0 {
    --button-v-pad-base: 0.75em;
  }
  &.of--density-1 {
    --button-v-pad-base: 0.5em;
  }
  &.of--density-2 {
    --button-v-pad-base: 0.375em;
  }
  &.of--density-3 {
    --button-v-pad-base: 0.25em;
  }

  --state-bg-color: transparent;
  --state-bg-opacity: 0;
  --button-bg-color: #{use-color(btn-elv-bg)};
  --button-bg-opacity: #{use-opacity(btn-elv-bg)};
  --button-border-color: transparent;
  --button-border-radius: 3px;
  --button-border-left-radius: var(--button-border-radius);
  --button-border-right-radius: var(--button-border-radius);
  --button-font-size: #{$font-size-input};
  --button-h-pad: 1em;
  --button-h-spacer: 0.75em;
  --button-v-pad: var(--button-v-pad-base);
  --button-split-color: transparent;
  --button-split-opacity: 0;

  display: inline-flex;
  font-size: var(--button-font-size);
  vertical-align: bottom;

  & .of--layer {
    border-radius: var(--button-border-left-radius)
      var(--button-border-right-radius) var(--button-border-right-radius)
      var(--button-border-left-radius);
  }

  .of--layer {
    border-top-left-radius: var(--button-border-left-radius);
    border-bottom-left-radius: var(--button-border-left-radius);
    border-top-right-radius: var(--button-border-right-radius);
    border-bottom-right-radius: var(--button-border-right-radius);
    &.of--layer-bg {
      background-color: var(--button-bg-color);
      opacity: var(--button-bg-opacity);
    }
    &.of--layer-brd {
      border: 1px solid var(--button-border-color);
    }
  }

  > button {
    outline: none;
    align-items: center;
    color: var(--button-color);
    opacity: var(--button-opacity);
    background-color: transparent;
    border: none;
    box-shadow: none;
    display: flex;
    font: inherit;
    flex: auto;
    grid-gap: var(--button-h-spacer);
    justify-content: center;
    line-height: 1.25;
    margin: 0;
    min-height: calc(1em + 2 * var(--button-v-pad));
    overflow: hidden;
    padding: 0 var(--button-h-pad);
    position: relative;
    white-space: nowrap;

    > .of-button-content {
      padding: var(--button-v-pad) 0;
      label {
        cursor: inherit;
        display: block;
        font-size: 0.85em;
      }
    }
  }
  &.of-button--icon > button {
    padding: 0 var(--button-v-pad);
  }

  &--rounded {
    --button-border-radius: 2em;
  }

  &.of--variant-elevated {
    @include apply-button-bg(btn-elv);
    @include apply-button-color(btn-elv);
    @include apply-button-split(elv);
    --button-border-color: transparent;
    &:not(.of--mode-disabled) {
      & .of--layer.of--layer-outl {
        --elevation-level: 1;
        .of-buttonset & {
          --elevation-level: 0;
        }
      }
      &:hover:not(:active) {
        @include apply-button-state(btn-elv, hover);
        .of--layer.of--layer-outl {
          --elevation-level: 2;
        }
      }
      &.of--focused {
        @include apply-button-state(btn-elv, focus);
      }
    }
    &.of--mode-disabled {
      @include apply-button-bg(btn-elv, disabled);
      @include apply-button-color(btn-elv, disabled);
    }
  }

  &.of--variant-filled {
    @include apply-button-bg(btn-fill);
    @include apply-button-color(btn-fill);
    @include apply-button-split(fill);
    --button-border-color: transparent;

    &:not(.of--mode-disabled) {
      &:hover:not(:active) {
        @include apply-button-state(btn-fill, hover);
        & .of--layer.of--layer-outl {
          --elevation-level: 1;
        }
      }
      &.of--focused {
        @include apply-button-state(btn-fill, hover);
      }
    }
    &.of--mode-disabled {
      @include apply-button-bg(btn-fill, disabled);
      @include apply-button-color(btn-fill, disabled);
    }
  }

  &.of--variant-tonal {
    @include apply-button-bg(btn-tonal);
    @include apply-button-color(btn-tonal);
    @include apply-button-split(tonal);
    --button-border-color: transparent;

    &:not(.of--mode-disabled) {
      &:hover:not(:active) {
        @include apply-button-state(btn-tonal, hover);
        & .of--layer.of--layer-outl {
          --elevation-level: 1;
        }
      }
      &.of--focused {
        @include apply-button-state(btn-tonal, focus);
      }
    }
    &.of--mode-disabled {
      @include apply-button-bg(btn-tonal, disabled);
      @include apply-button-color(btn-tonal, disabled);
    }
  }

  &.of--variant-outlined {
    --button-bg-color: transparent;
    --button-bg-opacity: 0;
    @include apply-button-color(btn-outl);
    @include apply-button-split(outl);
    --button-border-color: #{use-color(btn-outl-brd)};

    &:not(.of--mode-disabled) {
      &:hover:not(:active) {
        @include apply-button-state(btn-outl, hover);
      }
      &.of--focused {
        @include apply-button-state(btn-outl, focus);
      }
    }
    &.of--mode-disabled {
      @include apply-button-bg(btn-outl, disabled);
      @include apply-button-color(btn-outl, disabled);
    }
  }

  &.of--variant-text {
    --button-bg-color: transparent;
    --button-bg-opacity: 0;
    &:not(.of--keep-text-color) {
      @include apply-button-bg(btn-text);
      @include apply-button-color(btn-text);
    }
    --button-border-color: transparent;

    &:not(.of--mode-disabled) {
      &:hover:not(:active) {
        @include apply-button-state(btn-text, hover);
      }
      &.of--focused {
        @include apply-button-state(btn-text, focus);
      }
    }
    &.of--mode-disabled {
      @include apply-button-color(btn-text, disabled);
    }
  }

  & .of-button-split .of-button-expand::before {
    content: '';
    border-left: solid 1px var(--button-split-color);
    opacity: var(--button-split-opacity);
  }
}

.of-button-icon,
.of-button-expand {
  align-self: center;
  box-sizing: border-box;
  display: flex;
  flex: none;
  margin: 0 calc(var(--button-h-pad) * -0.25);
}

.of-button > .of-button-split {
  padding-left: 0.25em;
  padding-right: 0.25em;
  margin-left: 1px;
}

.of-buttonset {
  display: flex;
  width: fit-content;
  --buttonset-border-radius: 3px;
  &.of-buttonset--rounded {
    --buttonset-border-radius: 2em;
  }
  border-radius: var(--buttonset-border-radius);

  > .of-button {
    margin: 0 -1px 0 0;
    &.of--active {
      z-index: 1;
    }
    &:hover {
      z-index: 2;
    }

    --button-border-radius: 0;

    &.of--variant-outlined.of--active {
      --button-border-color: #{use-color(btn-outl-brd)};
    }

    &:first-of-type {
      --button-border-left-radius: var(--buttonset-border-radius);
    }
    &:last-of-type {
      --button-border-right-radius: var(--buttonset-border-radius);
      margin-right: 0;
    }
  }
}

.of-pagination-offset {
  width: 10rem;
}
