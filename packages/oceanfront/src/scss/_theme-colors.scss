$pal_colors: (189 47%) (15 83%) (34 97%) (0 75%) (80 15%) (191 8%);
$pal_names: "primary"  "secondary" "tertiary" "error" "neutral" "neutral-variant";
$lighness_values: (0 2 8 10 12 18 20 22 28 30 32 38 40 42 48 50 52 58 60 62 68 70 72 78 80 82 88 90 92 98 100);

@mixin shades($dark) {
  @each $a in $lighness_values {
    @if $dark {
      --of-light-#{$a}: #{(100 - $a) * 1%};
    } @else {
      --of-light-#{$a}: #{$a * 1%};
    }
}
  @each $pal in $pal_names {
    $idx: index($pal_names, $pal);
    $color: nth($pal_colors, $idx);
    $hue: nth($color, 1);
    $sat: nth($color, 2);
    --of-pal-#{$pal}-hue: #{$hue};
    --of-pal-#{$pal}-sat: #{$sat};
    @each $a in $lighness_values {
      @if $dark {
        --of-pal-#{$pal}-#{$a}: hsl(#{$color} #{(100 - $a) * 1%});
      } @else {
        --of-pal-#{$pal}-#{$a}: hsl(#{$color} #{$a * 1%});
      }
    }
  }
}

:root {
  @each $pal in $pal_names {
    $idx: index($pal_names, $pal);
    $color: nth($pal_colors, $idx);
    $hue: nth($color, 1);
    $sat: nth($color, 2);
    --of-pal-#{$pal}-hue: #{$hue};
    --of-pal-#{$pal}-sat: #{$sat};
    --of-pal-#{$pal}-huesat: #{$hue}, #{$sat};
    @each $a in $lighness_values {
        --of-pal-#{$pal}-#{$a}: hsl(#{$color} var(--of-light-#{$a}));
    }
  }
  @each $a in $lighness_values {
    --of-light-#{$a}: #{$a * 1%};
  }
}

.-of-theme-dark {
  @each $a in $lighness_values {
      --of-light-#{$a}: #{(100 - $a) * 1%};
  }
}


