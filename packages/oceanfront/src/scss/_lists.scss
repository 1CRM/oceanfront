.of-list-group {
  overflow: hidden;
  padding-left: 1em;

  &.v-enter-active {
    transition: all 200ms ease;
  }

  &.v-leave-active {
    transition: all 200ms ease;
  }

  &.v-enter-from,
  &.v-leave-to {
    max-height: 0;
  }

  .of-menu & {
    max-height: 100%;
  }
}

.of-list-item {
  @include define-color-opacity(item-bg,
    (transparent, 0%),
    (active: var(--of-container-tint) 100%,
      hover: var(--of-color-on-surface) 16%,
      exp: var(--of-color-on-surface-variant) 12%,
    ));
  @include define-color-opacity(item-text,
    (var(--of-on-container-tint), 100%),
    (hover: var(--of-color-on-surface) 100%,
      disabled: var(--of-color-on-surface) 38%,
      exp: var(--of-color-on-surface-variant) 100%,
    ));
  @include define-color-opacity(item-border,
    (transparent, 0%),
    (focus: var(--of-primary-tint) 50%,
    ));

  --border-color: transparent;
  --border-opacity: 100%;
  --bg-color: #{use-color(item-bg)};
  --bg-opacity: #{use-opacity(item-bg)};
  --text-color: #{use-color(item-text)};
  --text-opacity: #{use-opacity(item-text)};

  cursor: pointer;
  display: block;
  outline: none;
  padding: 2px 4px;
  text-decoration: none;
  transition: color 200ms;

  &.of--disabled {
    cursor: default;
  }

  & .of-list-item-inner {
    position: relative;
    align-items: center;
    display: flex;
    padding: 0.3em 0.8em;
    transition: background-color 200ms;

    & .of--layer {
      border: 1px solid transparent;
      background: transparent;
      border-radius: 5px;

      &.of--layer-bg {
        background-color: var(--bg-color);
        opacity: var(--bg-opacity);
      }

      &.of--layer-brd {
        border-color: var(--border-color);
        opacity: var(--border-opacity);
      }
    }

    color: var(--text-color);
    opacity: var(--text-opacity);

    & .of-list-item-content {
      display: flex;
      flex: auto;
      z-index: 1;
      align-items: center;
    }
  }

  &.of--disabled {
    --bg-color: #{use-color(item-bg, disabled)};
    --bg-opacity: #{use-opacity(item-bg, disabled)};
    --text-color: #{use-color(item-text, disabled)};
    --text-opacity: #{use-opacity(item-text, disabled)};
  }

  &.of--active:not(.of--disabled):not(.of--expandable) {
    font-weight: 500;
    --bg-color: #{use-color(item-bg, active)};
    --bg-opacity: #{use-opacity(item-bg, active)};
    --text-color: #{use-color(item-text, active)};
    --text-opacity: #{use-opacity(item-text, active)};
  }

  &:not(.of--disabled):not(.of--active):not(.of--expandable):hover {
    --bg-color: #{use-color(item-bg, hover)};
    --bg-opacity: #{use-opacity(item-bg, hover)};
    --text-color: #{use-color(item-text, hover)};
    --text-opacity: #{use-opacity(item-text, hover)};
  }

  &:not(.of--disabled).of--focused {
    --border-color: #{use-color(item-border, focus)};
    --border-opacity: #{use-opacity(item-border, focus)};
  }

  &.of--expandable {
    font-weight: 800;
    --bg-color: #{use-color(item-bg, exp)};
    --bg-opacity: #{use-opacity(item-bg, exp)};
    --text-color: #{use-color(item-text, exp)};
    --text-opacity: #{use-opacity(item-text, exp)};
  }
}

.of-list-outer {
  padding-bottom: 0.25em;
  padding-top: 0.25em;
  user-select: none;
}

.of-list-header {
  @include define-color-opacity(item-bg,
    (transparent, 0%),
    (header: var(--of-color-surface-variant) 100%,
    ));
  @include define-color-opacity(item-text,
    (var(--of-on-container-tint), 100%),
    (header: var(--of-color-on-surface-variant) 100%,
    ));

  z-index: 2;
  cursor: default;
  font-size: 80%;
  overflow: hidden;
  padding: 0 1.25ch;
  pointer-events: none;
  position: sticky;
  text-overflow: ellipsis;
  text-transform: uppercase;
  top: 0px;
  user-select: none;
  white-space: nowrap;
  background: #{use-color(item-bg, header)};
  color: #{use-color(item-text, header)};
  opacity: 100%;
}

.of-list-divider {
  &::before {
    content: '';
    display: block;
    background: rgba(0, 0, 0, 0.25);
    height: 1px;
    margin: 0.15em 0.5em;
  }
}