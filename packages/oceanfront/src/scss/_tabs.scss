@mixin apply-tab-bg($cat, $state: false) {
  --tab-bg-color: #{use-color(#{$cat}-bg, $state)};
  --tab-bg-opacity: #{use-opacity(#{$cat}-bg, $state)};
}

@mixin apply-tab-color($cat, $state: false) {
  --tab-color: #{use-color(#{$cat}-color, $state)};
  --tab-opacity: #{use-opacity(#{$cat}-color, $state)};
}

@mixin apply-tab-state($cat, $state: false) {
  --tab-state-color: #{use-color(#{$cat}-st, $state)};
  --tab-state-opacity: #{use-opacity(#{$cat}-st, $state)};
}

/** Define state variables */
.of-tabs {
  @include define-color-opacity(
    mat-bg,
    (transparent, 0%),
    (
      hover: var(--of-primary-tint) 6%,
      active: var(--of-primary-tint) 12%,
    )
  );
  @include define-color-opacity(
    mat-color,
    (var(--of-color-on-background), 100%),
    (
      active: var(--of-primary-tint) 100%,
      disabled: var(--of-color-on-background) 38%,
    )
  );
  @include define-color-opacity(mat-st, (transparent, 0), ());

  @include define-color-opacity(
    osx-bg,
    (transparent, 0%),
    (
      hover: var(--of-color-inverse-surface) 60%,
      active: var(--of-color-inverse-surface) 60%,
    )
  );
  @include define-color-opacity(
    osx-color,
    (var(--of-color-on-surface), 100%),
    (
      hover: var(--of-color-inverse-on-surface) 100%,
      active: var(--of-color-inverse-on-surface) 100%,
      disabled: var(--of-color-on-surface) 38%,
    )
  );
  @include define-color-opacity(osx-st, (transparent, 0), ());

  --of-tab-border-radius: 6px;
  --of-tab-osx-border-color: var(--of-color-outline);
}

/** Styling */
.of-tabs {
  .of-tab-header-item {
    position: relative;
  }

  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;

  div {
    .of-tabs-navigation-header {
      --tabs-bg-color: transparent;

      --tab-border-width: 1px;

      --tab-bg-color: transparent;
      --tab-bg-opacity: 0;
      --tab-color: inherit;
      --tab-opacity: 100%;
      --state-bg-color: transparent;
      --state-bg-opacity: 0;
      --tab-state-color: 0;
      --tab-state-opacity: 0;
      --tab-border-radius: 0;
      position: relative;
      background: var(--tabs-bg-color);
      padding: 0 3px;

      .of-tabs-navigation {
        opacity: 0;
        visibility: hidden;
      }

      &.of-tabs-navigation-header-show-next-navigation {
        .of-tabs-navigation-next {
          opacity: 1;
          visibility: visible;
        }

        .of-tabs-header {
          margin-right: 45px;
        }
      }

      &.of-tabs-navigation-header-show-previous-navigation {
        .of-tabs-navigation-prev {
          opacity: 1;
          visibility: visible;
        }

        .of-tabs-header {
          margin-left: 43px;
        }
      }
    }

    .of-tabs-navigation {
      padding: 8px 9px;
      position: absolute;
      height: 30px;
      left: 0;
      cursor: pointer;
      z-index: 3;

      &.of-tabs-navigation-next {
        z-index: 111;
        right: 3px;
        left: auto;
        top: 0;
        height: 30px;
      }
    }

    .of-tabs-header {
      display: flex;
      padding-top: 1px;
      position: relative;
      flex: 1 0 auto;
      transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);
      white-space: nowrap;
      scrollbar-width: none;
      -ms-overflow-style: none;
      overflow-x: auto;

      &::-webkit-scrollbar {
        display: none;
      }

      .of-tab-header-item {
        padding: 10px 10px;
        &:not(.is-disabled) {
          cursor: pointer;
        }
        &.of--rounded {
          --tab-border-radius: var(--of-tab-border-radius);
        }
        transition: all 0.2s;
        display: flex;

        .of-tab-text {
          z-index: 2;
          display: flex;
          color: var(--tab-color);
          opacity: var(--tab-opacity);
          & > .of-icon {
            margin-right: 0.4em;
          }
        }
        * {
          pointer-events: none;
        }
        .of--layer {
          border-top-left-radius: var(--tab-border-radius);
          border-top-right-radius: var(--tab-border-radius);

          &.of--layer-bg {
            background-color: var(--tab-bg-color);
            opacity: var(--tab-bg-opacity);
          }
          &.of--layer-state {
            background-color: var(--tab-state-color);
            opacity: var(--tab-state-opacity);
          }
        }

        &.is-active {
          transition: all 0.2s;
        }

        &.overflow-button {
          margin-left: auto;
          line-height: 100%;
        }
      }
    }
  }

  .of--variant-material {
    .of-tabs-line {
      position: absolute;
      height: 2px;
      background: var(--of-primary-tint);
      bottom: 0;
      transition: all 0.2s;
    }
    @include apply-tab-bg(mat);
    @include apply-tab-bg(mat);
    @include apply-tab-color(mat);

    .of-tab-header-item {
      &:not(.is-disabled) {
        &:hover {
          @include apply-tab-bg(mat, hover);
          @include apply-tab-color(mat, hover);
          @include apply-tab-state(mat, hover);
        }
        &:focus {
          @include apply-tab-bg(mat, focus);
          @include apply-tab-color(mat, focus);
          @include apply-tab-state(mat, focus);
        }
        &.is-active {
          @include apply-tab-bg(mat, active);
          @include apply-tab-color(mat, active);
          @include apply-tab-state(mat, active);
        }
      }
      &.is-disabled {
        @include apply-tab-bg(mat, disabled);
        @include apply-tab-color(mat, disabled);
        @include apply-tab-state(mat, disabled);
      }
    }
  }

  .of--variant-osx {
    .of-tabs-header {
      &::-webkit-scrollbar {
        display: none;
      }

      .of-tabs-line {
        visibility: hidden;
      }
      @include apply-tab-bg(osx);
      @include apply-tab-color(osx);
      @include apply-tab-state(osx);

      .of-tab-header-item {
        font-weight: 500;
        float: left;
        border-top: 1px solid var(--of-tab-osx-border-color);
        border-bottom: 1px solid var(--of-tab-osx-border-color);
        list-style: none;
        height: 19px !important;
        text-decoration: none;
        font-size: 13px;
        padding: 2px 20px 2px 20px;
        border-right: 1px solid var(--of-tab-osx-border-color);

        .of-tab-text > .of-icon {
          margin-right: 0.2em;
        }

        &:first-of-type {
          border-left: 1px solid var(--of-tab-osx-border-color);
          border-left-color: var(--of-tab-osx-border-color);
          border-top-left-radius: 4px;
          border-bottom-left-radius: 4px;
        }

        &:nth-last-of-type(2) {
          border-right: 1px solid var(--of-tab-osx-border-color);
          border-right-color: var(--of-tab-osx-border-color);
          border-top-right-radius: 4px;
          border-bottom-right-radius: 4px;
        }

        &:not(.is-disabled) {
          &:hover {
            @include apply-tab-bg(osx, hover);
            @include apply-tab-color(osx, hover);
            @include apply-tab-state(osx, hover);
          }
          &:focus {
            @include apply-tab-bg(osx, focus);
            @include apply-tab-color(osx, focus);
            @include apply-tab-state(osx, focus);
          }
          &.is-active {
            @include apply-tab-bg(osx, active);
            @include apply-tab-color(osx, active);
            @include apply-tab-state(osx, active);
          }
        }
        &.is-disabled {
          @include apply-tab-bg(osx, disabled);
          @include apply-tab-color(osx, disabled);
          @include apply-tab-state(osx, disabled);
        }
      }
    }
  }
}
