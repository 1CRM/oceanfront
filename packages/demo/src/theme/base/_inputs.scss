@mixin flat-bottom {
  border-bottom-left-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}
@mixin flat-top {
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
}
@mixin flat-left {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}
@mixin flat-right {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

@mixin no-select {
  cursor: default;
  -webkit-user-select: none;
  -moz-user-select: -moz-none;
  user-select: none;
}

@mixin input-text-disabled {
  color: $color-input-disabled;
  -webkit-text-fill-color: $color-input-disabled; // override needed for disabled state
  text-shadow: $text-shadow-disabled;
}

@mixin input-text-base {
  font-family: $font-family-input;
  font-weight: $font-weight-input;
  letter-spacing: $letter-spacing-input;
  line-height: $line-height-input;
}

// for applying to other elements
.input-field-pad {
  padding: $pad-v-input $pad-h-input;
}
.input-field-pad-horz {
  padding-left: $pad-h-input;
  padding-right: $pad-h-input;
}

.input-block {
  display: block;
  width: 100%;
}

.input-compact {
  --pad-h-input: #{$pad-h-compact-input};
  --pad-v-input: #{$pad-v-compact-input};
}
.input-sm {
  --font-size-input: #{$font-size-input-sm};
}
.input-lg {
  --font-size-input: #{$font-size-input-lg};
}

.input-icon {
  display: inline-flex; // allow scaling of contents
  transform: scale($scale-icon-x, $scale-icon-y);
  &.left {
    margin-right: 0.25em;
  }
}

// for complex field content (ref input)
.input-wrapper {
  display: inline-block;
  max-width: 100%;
}

.input-label {
  text-overflow: ellipsis;
  white-space: normal;
  word-wrap: break-word;
  @include input-text-base;
  &.single {
    align-items: center;
    display: block;
    max-width: 100%;
    overflow: hidden;
    white-space: nowrap;
  }
  &.limit-height {
    overflow: hidden;
    display: -webkit-box;
    display: box;
    -webkit-line-clamp: 3;
    line-clamp: 3;
    -webkit-box-orient: vertical;
    box-orient: vertical;
  }
  /*&.zero-left {
		padding-left: 0;
	}
	&.zero-right {
		padding-right: 0;
	}*/
}

.input-placeholder {
  color: $color-input-placeholder;
}

.ref-label {
  pointer-events: none;
}

.input-field {
  overflow: hidden;
  padding: 0; // reset button padding - must use an input-label

  > .input-label {
    box-sizing: content-box;
    &:not(.single):not(.limit-height) {
      display: flex; // to preserve padding
    }
    min-height: calc(
      1em * #{$line-height-input} - 1px
    ); // 1px for rounding error
    &.limit-height {
      max-height: calc(3em * #{$line-height-input} - 1px);
    }
    padding: $pad-v-input $pad-h-input;
    vertical-align: top;
  }
  > .input-flow-content {
    display: inline-block; // to preserve padding
    box-sizing: border-box;
    padding: $pad-v-input $pad-h-input;
    vertical-align: top;
  }
  &.border-dashed {
    border-style: dashed;
  }
  .input-icon {
    color: $color-input-icon;
  }
  &:hover,
  &:focus,
  &:active,
  &.active,
  &:disabled,
  &.disabled,
  &.opened {
    .input-icon {
      color: inherit;
    }
  }
  .wait-icon,
  .wait-icon.dynamic {
    height: 18px;
    line-height: 18px;
    vertical-align: top;
  }
}

.input-text,
.input-field {
  background: $bg-input;
  border: $border-width-input solid $border-color-input;
  border-radius: $border-radius-input;
  box-shadow: $box-shadow-input;
  box-sizing: border-box;
  color: $color-input;
  font-size: $font-size-input;
  max-width: 100%; // don't extend past containing cell
  vertical-align: $vertical-align-input;
  @include input-text-base;
  /*&.muted {
		border-color: @border-color-muted;
		.input-bg-field-flat();
	}*/
  /*&.invalid { // FIXME adjust variables in context?
		border-color: @border-color-error;
		color: @text-color-error;
  }*/
  &.flat {
    background: none;
    background-clip: padding-box;
    border-color: transparent;
    border-bottom: 1px dotted $border-color-input;
    border-radius: 0;
    box-shadow: none;
  }
  &:hover:not(.static) {
    border: $border-width-input solid $border-color-input-hover;
  }
  &:hover:not(.static):not(.input-field-group) {
    color: $color-input-hover;
  }
  &:focus {
    background: $bg-input-focus;
    border: $border-width-input solid $border-color-input-focus;
    box-shadow: $box-shadow-input-focus;
    color: $color-input-focus;
    outline: none;
  }
  &:active,
  &.active {
    background: $bg-input-active;
    border: $border-width-input solid $border-color-input-active;
    // box-shadow: $box-shadow-input-active;
    color: $color-input-active;
    outline: none;
  }
  &.readonly,
  &[readonly] {
    background: $bg-input-disabled;
    border-color: $border-color-input-disabled;
  }
  &.disabled,
  &:disabled {
    background: $bg-input-disabled;
    border-color: $border-color-input-disabled;
    opacity: $opacity-input-disabled;
    @include input-text-disabled;
  }
  &::placeholder {
    color: $color-input-placeholder;
  }
  &:-ms-input-placeholder {
    color: $color-input-placeholder !important;
  }
}

.input-field:hover,
.input-field:focus,
.input-field:active,
.input-field.active {
  .input-placeholder {
    color: inherit;
  }
}

.input-text,
.input-button,
.input-file {
  padding: $pad-v-input $pad-h-input;
  &:disabled {
    border-color: $border-color-input-disabled;
    opacity: $opacity-input-disabled;
    @include input-text-disabled;
  }
}

.input-button {
  background: $bg-button;
  box-sizing: border-box;
  border: $border-width-button solid $border-color-button;
  border-radius: $border-radius-button;
  color: $color-button;
  font-size: $font-size-input;
  max-width: 100%; // don't extend past containing cell
  overflow: hidden;
  text-decoration: none; // for link as button
  @include input-text-base;
  text-shadow: $text-shadow-button;
  vertical-align: $vertical-align-button;
  white-space: nowrap;
  > .input-label {
    white-space: inherit;
  }
  &.wrap {
    white-space: normal;
  }
  input#{&} {
    cursor: default; // needs explicit override
  }
  .input-icon {
    color: $color-button-icon;
  }
  &:hover,
  &:focus,
  &:active,
  &.active,
  &:disabled,
  &.disabled,
  &.opened {
    .input-icon {
      color: inherit;
    }
  }
  /*&.muted {
		border-color: @border-color-button-muted;
	}*/
  /*&.flat {  FIXME link-style button?
    border-color: transparent;
    background-clip: padding-box;
    background: none;
    box-shadow: none;
    border-radius: 0;
    border-bottom: 1px dotted $border-color-button;
  }*/
  &:hover {
    border-color: $border-color-input-hover;
    color: $color-input-hover;
    &::after {
      color: $color-input-hover;
    }
  }
  &:focus,
  &:active,
  &.active {
    background: $bg-button-active;
    border-color: $border-color-button-active;
    box-shadow: $box-shadow-input-focus;
    color: $color-button-active;
    outline: none;
    &::after {
      color: $color-button-active;
    }
  }
  &.disabled,
  &:disabled {
    background: $bg-button-disabled;
    border-color: $border-color-input-disabled;
    color: $color-input-disabled;
    opacity: $opacity-input-disabled;
  }
}

.input-field,
.input-button {
  display: inline-block;
  position: relative;
  text-align: left;
  @include no-select;

  &:disabled,
  &.disabled {
    .input-icon {
      opacity: 0.6;
    }
  }
  select#{&} {
    // allow custom styling of select
    -moz-appearance: none;
    -webkit-appearance: none;

    padding: 0 1.6em 0 $pad-h-input;
    background: $bg-input $bg-bullet-down right 0.35em center/.6em 0.8em
      no-repeat;
    border-radius: $border-radius-input;
    height: calc(
      1em * #{$line-height-input} + 2 * #{$pad-v-input} + 2 * #{$border-width-input}
    );
    &::-ms-expand {
      // hide dropdown arrow
      display: none;
    }
    &[multiple] {
      height: initial;
      box-sizing: content-box;
      background-image: none;
      padding: $pad-v-input;
    }
  }
}

.input-bullet {
  &::after {
    // content: ""; // must be set by mixin
    display: inline-block;
    text-align: center;
    text-shadow: none;
    transform: scale($scale-bullet);
    transform-origin: 50% 0.5em;
    width: $width-bullet;
  }

  &.input-label {
    margin-right: -2px;
    &::after {
      position: relative;
      top: -1px;
    }
  }

  &.input-field {
    padding-right: calc(#{$width-bullet} - 2px);
    position: relative;
    &::after {
      bottom: 0;
      border-radius: 0 calc(#{$border-radius-input} - 1px)
        calc(#{$border-radius-input} - 1px) 0;
      font-size: $font-size-bullet;
      line-height: #{$font-size-input};
      position: absolute;
      right: 2px;
      top: $pad-v-input;
    }
    &.readonly::after {
      @include input-text-disabled;
    }
    /*&-inline {
    display: inline-block;
    // padding-left: 0.25em;
    // padding-right: 0.1em;
    line-height: inherit;
    vertical-align: baseline;
  }*/
  }

  &.input-button {
    padding-right: calc(#{$width-bullet} + #{$pad-h-input} - 2px);
    position: relative;
    &::after {
      position: absolute;
      top: $pad-v-input;
      right: 2px;
    }
  }
}

.input-text {
  // line-height: normal; // fix placeholder position
  -webkit-appearance: none; // remove extra shadow on iOS
  appearance: none;
  &[readonly] {
    //border-color: @border-color-field;
    background: $bg-input-disabled;
  }
}

// needed for proper height in safari - sets a special minimum height of around 115% line height?
input.input-text {
  height: calc(1em * #{$line-height-input} + 2 * #{$pad-v-input});
}

textarea.input-text {
  height: auto;
  padding-right: $pad-h-input;
}

.input-file {
  &::-webkit-file-upload-button {
    background: $bg-button;
    border: $border-width-button solid $border-color-button;
    border-radius: $border-radius-button;
    color: $color-button;
    font-size: 85%;
    text-shadow: $text-shadow-button;
    @include input-text-base;
    line-height: calc(#{$font-size-input} * #{$line-height-input});
    &:hover {
      border-color: $border-color-input-hover;
    }
    &:focus,
    &:active {
      background: $bg-button-focus;
      border-color: $border-color-input-focus;
      box-shadow: $box-shadow-input-focus;
      color: $color-button-focus;
      outline: none;
    }
  }
  &:disabled::-webkit-file-upload-button {
    background: $bg-button-disabled;
    border-color: $border-color-input-disabled;
    color: $color-input-disabled;
    opacity: $opacity-input-disabled;
  }
}

.input-fileset {
  display: inline-block;
  position: relative;
  vertical-align: $vertical-align-input;
  label {
    @include no-select;
  }
  input[type='file'] {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    opacity: 0;
    &:hover + label {
      border-color: $border-color-input-hover;
    }
    &:disabled + label,
    &:disabled:hover + label {
      background: $bg-input-disabled;
      border-color: $border-color-input-disabled;
      opacity: $opacity-input-disabled;
      @include input-text-disabled;
      &::after {
        border-color: $border-color-input-disabled;
      }
    }
  }
}

// arrange other inputs horizontally with wrapping. usually inside an input-field
// (rename to avoid confusion)
.input-flow-content {
  // .clearfix(); // FIXME?
  flex-wrap: wrap;
  vertical-align: $vertical-align-input;
  &:focus,
  &:active,
  &.active {
    outline: none;
  }
  > .input-field,
  > .input-button,
  > .input-text {
    float: left;
    margin: $pad-v-input 0.25em $pad-v-input 0;
    &:last-child {
      margin-right: 0;
    }
  }
}

.input-remove {
  padding: $pad-v-compact-input #{$pad-h-compact-input};
  margin-left: calc(0px - #{$pad-h-compact-input} - 2px);
}

.input-button-group {
  display: inline-flex;
  max-width: 100%;
  overflow: hidden;
  padding-left: 1px;
  vertical-align: $vertical-align-input;
  > .input-field,
  > .input-button {
    margin-left: -1px;
    &:not(:first-child) {
      @include flat-left;
    }
    &:not(:last-child) {
      @include flat-right;
    }
    &:hover,
    &:focus,
    &.active {
      z-index: 2;
    }
  }
  /*> .input-check.box {
    margin-left: -1px;
    &:hover,
    &:focus,
    > input:checked + label {
      z-index: 2;
    }
    line-height: $line-height-input;
  }*/
}

.input-scroll {
  overflow: auto;
  &::-webkit-scrollbar {
    -webkit-appearance: none;
    width: 12px;
    height: 18px;
    background-color: rgba(100, 100, 100, 0.1); // @bg-color-quiet;
  }
  &::-webkit-scrollbar-thumb {
    background-clip: padding-box;
    background-color: rgba(0, 0, 0, 0.5);
    border: 2px solid rgba(0, 0, 0, 0);
    border-radius: 8px;
    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5);
    width: 8px;
  }
}

.input-field-group {
  display: inline-flex;
  &.input-block {
    display: flex;
  }
  vertical-align: $vertical-align-input;
  > .input-field,
  > .input-text,
  > .input-button,
  > .input-label,
  > .input-flow-content {
    border-color: inherit;
    border-radius: calc(#{$border-radius-input} - 1px);
    border-style: solid;
    border-width: 0;
    &:not(:first-child) {
      @include flat-left;
    }
    &:not(:last-child) {
      @include flat-right;
    }
    &.border-left {
      border-left-width: $border-width-input;
    }
    &.border-right {
      border-right-width: $border-width-input;
    }
  }
  > .input-field,
  > .input-text,
  > .input-button,
  > .input-flow-content {
    flex: 1 1 auto;
  }
  > .input-text {
    box-shadow: none;
    &:not(:disabled) {
      background: transparent;
    }
  }
  > input.input-text {
    // would be nice to set height: initial here and let the input scale
    // instead, this fix for safari
    height: calc(1em * #{$line-height-input} + 2 * #{$pad-v-input});
  }
  > .input-icon,
  > .uii {
    flex: 0 0 auto;
    margin: 4px $pad-h-input 2px $pad-h-input;
    &.input-sm {
      margin: 2px $pad-h-input 1px $pad-h-input;
    }
  }
  /*> .uii-lg {
    margin: 1px;
    &:first-child {
      margin-left: ($pad-h-input / 2);
    }
    &:last-child {
      margin-right: ($pad-h-input / 2);
    }
  }*/
  > .input-addon {
    display: flex;
    align-items: center;
    flex: 0 0 auto;
  }
  .input-field-icon {
    padding-bottom: 0;
    &:first-child {
      padding-right: 0;
    }
    .input-label ~ &:last-child {
      padding-left: 0;
    }
    > .uii {
      line-height: inherit;
    }
  }
  // FIXME avoid :not
  /*&:not(.opened):not(:focus):not(:hover):not(.active) .input-field-icon > .uii {
    //color: $color-muted;
    opacity: 0.7;
  }
  &:not(.opened):not(:focus):not(:hover):not(.active)
    .input-field-icon
    > .input-icon {
    //color: @color-muted;
    opacity: 0.85;
  }*/
  > .input-field-group {
    flex: 1 0 auto;
  }
  &.disabled .input-field {
    background: $bg-button-disabled;
    border-color: $border-color-input-disabled;
    @include input-text-disabled;
  }
}

.input-field.opened,
.input-button.opened {
  background-color: $bg-button-active;
  border-color: $border-color-button-active;
  color: $color-button-active;
  text-shadow: none;
  &.opened-above {
    @include flat-top;
  }
  &:not(.opened-above) {
    @include flat-bottom;
  }
  .input-placeholder {
    color: inherit;
  }
}

.input-search > .input-text {
  // fix clear button going off the end
  width: 100%;
}

.input-check {
  color: $color-input;
  display: inline-block;
  font-size: $font-size-input;
  max-width: 100%; // don't extend past containing cell
  position: relative;
  vertical-align: $vertical-align-input;
  @include no-select;
  @include input-text-base;
  &.input-field {
    padding: $pad-v-input $pad-h-input;
  }
  > input[type='checkbox'],
  > input[type='radio'] {
    font-size: inherit;
    margin: 0;
    /*&:not(:checked) + label {
      color: $color-input-placeholder;
    }*/
  }
  > input:hover,
  > input:hover + label {
    color: $color-input-hover;
  }
  > input:focus,
  > input:focus + label {
    color: $color-input-focus;
    outline: none;
  }
  > input:active,
  > input:active + label {
    color: $color-input-active;
  }
  > input:disabled,
  > input:disabled + label {
    @include input-text-disabled;
  }
}

.badge {
  background: $bg-badge;
  border: $border-width-badge solid $border-color-input;
  //.state-neutral;
  border-radius: $border-radius-badge;
  color: $color-badge;
  cursor: default;
  display: inline-block;
  font-size: $font-size-badge;
  font-weight: $font-weight-badge;
  line-height: $line-height-badge;
  margin-top: 2px;
  margin-bottom: 2px;
  padding: $pad-v-badge $pad-h-badge;
  text-shadow: $text-shadow-badge;
  text-transform: uppercase;
  vertical-align: $vertical-align-badge;
  white-space: nowrap;
  .small &,
  .listAddLine & {
    font-size: 0.65rem;
    line-height: 0.8rem;
    padding: 0.15rem 0.2rem 0.05rem 0.2rem;
    margin-top: 0;
  }
  .listAddLine & {
    margin: -1px 0;
  }
}

.input-progress {
  align-items: stretch;
  border: 1px solid $border-color-progress;
  border-radius: $border-radius-progress;
  display: flex;
  flex: 1 1 auto;
  flex-flow: row nowrap;
  font-size: $font-size-input;
  line-height: $line-height-input;
  margin: 2px;
  min-height: calc(1em * #{$line-height-input});
  overflow: hidden;
  &-outer {
    align-items: stretch;
    display: inline-flex;
  }
  &-bar {
    background-color: #bbb;
    flex: 0 0 auto;
    position: relative;
    &.empty,
    .disabled &.empty {
      background: transparent;
      flex: 1 1 0px;
    }
    label {
      display: block;
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      font-size: 90%;
      line-height: calc(#{$font-size-input} * #{$line-height-input});
      text-align: center;
      text-shadow: $text-shadow-progress;
    }
  }
  .disabled &-bar {
    background: $bg-button-disabled;
    border-color: $border-color-input-disabled;
    color: $color-input-disabled;
    opacity: $opacity-input-disabled;
  }
}

.input-link {
  text-decoration: none;
  &:hover {
    text-decoration: underline;
  }
}

.form-group {
  margin-bottom: 1rem;
}

/*
.slider-outer {
  background-color: @bg-color-slider;
  border: 1px solid @border-color-slider;
  border-radius: @border-radius-input;
  box-shadow: inset 0 2px 3px 0 rgba(0, 0, 0, 0.05);
  font-size: 28px;
  display: block;
  height: 15px;
  position: relative;
}
.slider-indicator {
  background-color: @bg-color-slider-indicator;
  border: 1px solid @border-color-field;
  border-radius: @border-radius-input;
  box-sizing: border-box;
  color: @text-color-field;
  display: block;
  height: 20px;
  left: 0;
  line-height: 20px;
  position: absolute;
  text-align: center;
  top: 0;
  width: 20px;
  &:hover {
    background-color: @bg-color-field;
    border-color: @border-color-hover;
    color: @text-color-hover;
  }
  &.active {
    background-color: @bg-color-field;
    border-color: @border-color-active;
    color: @text-color-active;
  }
}
.slider-point {
  background-color: @border-color-field;
  box-shadow: 1px 1px 1px 0 rgba(100, 100, 100, 0.1);
  display: block;
  height: 4px;
  position: absolute;
  width: 1px;
}
*/
